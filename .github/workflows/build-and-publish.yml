name: build-and-publish
run-name: build-and-publish
on:
  push:
    branches:
      - dev
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Update
        shell: bash
        run: sudo apt update

      - name: Copy .env
        shell: bash
        run: cp .env.pipeline .env

      - name: Install Rust
        shell: bash
        run: sudo apt install rustc

      - name: Build rust-server-auth
        shell: bash
        run: cargo build -p rust-server-auth --release

      - name: Build rust-server-game
        shell: bash
        run: cargo build -p rust-server-game --release

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-3
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: github-actions-build-and-publish

      - name: Publish lambda auth to AWS S3 
        shell: bash
        run: aws s3 cp ./target/release/rust-server-auth s3://lambda-artefacts-${{ github.ref_name }}/auth/

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push game docker image to AWS ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: game-${{ github.ref_name }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./rust-server-game/Dockerfile .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG